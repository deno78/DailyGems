name: Build Android APK/AAB

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
      output_format:
        description: 'Output format'
        required: true
        default: 'apk'
        type: choice
        options:
        - apk
        - aab
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'android/**'
      - 'package.json'
      - 'angular.json'
      - 'capacitor.config.ts'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'android/**'
      - 'package.json'
      - 'angular.json'
      - 'capacitor.config.ts'

env:
  BUILD_TYPE: ${{ github.event.inputs.build_type || 'debug' }}
  OUTPUT_FORMAT: ${{ github.event.inputs.output_format || 'apk' }}

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build -- --configuration=production
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Make gradlew executable
      run: chmod +x ./android/gradlew
      
    - name: Verify Gradle and Java versions
      run: |
        cd android
        echo "=== Gradle Version ==="
        ./gradlew --version
        echo "=== Java Version ==="
        java -version
      
    - name: Build Android APK (Debug)
      if: ${{ env.BUILD_TYPE == 'debug' && env.OUTPUT_FORMAT == 'apk' }}
      run: |
        cd android
        ./gradlew assembleDebug --stacktrace --info
        
    - name: Build Android APK (Release)
      if: ${{ env.BUILD_TYPE == 'release' && env.OUTPUT_FORMAT == 'apk' }}
      run: |
        cd android
        ./gradlew assembleRelease --stacktrace --info
        
    - name: Build Android AAB (Debug)
      if: ${{ env.BUILD_TYPE == 'debug' && env.OUTPUT_FORMAT == 'aab' }}
      run: |
        cd android
        ./gradlew bundleDebug --stacktrace --info
        
    - name: Build Android AAB (Release)
      if: ${{ env.BUILD_TYPE == 'release' && env.OUTPUT_FORMAT == 'aab' }}
      run: |
        cd android
        ./gradlew bundleRelease --stacktrace --info
        
    - name: Find APK files
      if: ${{ env.OUTPUT_FORMAT == 'apk' }}
      run: |
        echo "Looking for APK files..."
        find android/app/build/outputs/apk -name "*.apk" -type f
        
    - name: Find AAB files
      if: ${{ env.OUTPUT_FORMAT == 'aab' }}
      run: |
        echo "Looking for AAB files..."
        find android/app/build/outputs/bundle -name "*.aab" -type f
        
    - name: Upload APK artifacts
      if: ${{ env.OUTPUT_FORMAT == 'apk' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ env.BUILD_TYPE }}
        path: android/app/build/outputs/apk/**/*.apk
        retention-days: 30
        
    - name: Upload AAB artifacts
      if: ${{ env.OUTPUT_FORMAT == 'aab' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-aab-${{ env.BUILD_TYPE }}
        path: android/app/build/outputs/bundle/**/*.aab
        retention-days: 30
        
    - name: Build summary
      run: |
        echo "## Build Summary ðŸ“±" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ env.BUILD_TYPE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Output Format**: ${{ env.OUTPUT_FORMAT }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ env.OUTPUT_FORMAT }}" == "apk" ]]; then
          echo "ðŸ“¦ APK files have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
        else
          echo "ðŸ“¦ AAB files have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "You can download the artifacts from the workflow run page." >> $GITHUB_STEP_SUMMARY